// <auto-generated />
using System;
using ArticleApplication.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ArticleApplication.Migrations
{
    [DbContext(typeof(ArticleContext))]
    [Migration("20231225074836_Add CreatedDate for Author")]
    partial class AddCreatedDateforAuthor
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.12");

            modelBuilder.Entity("ArticleApplication.Models.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AuthorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("LikeCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Content = "dllm",
                            CreatedDate = new DateTime(2023, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LikeCount = 5,
                            Title = "Kevin's article"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            Content = "asdf",
                            CreatedDate = new DateTime(2023, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LikeCount = 10,
                            Title = "David's article"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            Content = "haiyaa",
                            CreatedDate = new DateTime(2023, 7, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LikeCount = 15,
                            Title = "Mary's article"
                        });
                });

            modelBuilder.Entity("ArticleApplication.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Phone")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "kevin@gmail.com",
                            Name = "Kevin",
                            Phone = 1231234123
                        },
                        new
                        {
                            Id = 2,
                            Email = "david@gmail.com",
                            Name = "David",
                            Phone = 114514
                        },
                        new
                        {
                            Id = 3,
                            Email = "mary@gmail.com",
                            Name = "Mary",
                            Phone = 1919810
                        });
                });

            modelBuilder.Entity("ArticleApplication.Models.Article", b =>
                {
                    b.HasOne("ArticleApplication.Models.Author", "Author")
                        .WithMany("Articles")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("ArticleApplication.Models.Author", b =>
                {
                    b.Navigation("Articles");
                });
#pragma warning restore 612, 618
        }
    }
}
